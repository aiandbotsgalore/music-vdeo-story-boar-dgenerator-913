export interface Concept {
  logline: string;
  narrativeArc: string;
}

export interface Scene {
  timestamp: string;
  description: string;
  actions?: string;
  lyric?: string;
  section?: string;
  cameraAngle?: string;
  imageHistory?: string[][]; // Each element is an array of variant IDs for a single generation step
}

export interface Project {
    id: number;
    name: string;
    ideaPrompt: string;
    lyrics: string;
    audioId: string | null;
    // Generated by AI
    concept: string; // This holds the logline
    narrativeArc: string;
    // User-defined creative controls
    characterPrompt: string;
    selectedStyle: string;
    customStyle: string;
    numVariants: number;
    forceCharacterInScenes?: boolean;
    characterReferenceImageId: string | null;
    styleReferenceImageId: string | null;
    storyboard: Scene[];
}

export function isScene(obj: any): obj is Scene {
  return (
    obj &&
    typeof obj.timestamp === 'string' &&
    typeof obj.description === 'string' &&
    (typeof obj.actions === 'string' || typeof obj.actions === 'undefined') &&
    (typeof obj.lyric === 'string' || typeof obj.lyric === 'undefined') &&
    (typeof obj.section === 'string' || typeof obj.section === 'undefined') &&
    (typeof obj.cameraAngle === 'string' || typeof obj.cameraAngle === 'undefined') &&
    (Array.isArray(obj.imageHistory) || typeof obj.imageHistory === 'undefined')
  );
}

export function isProject(obj: any): obj is Project {
  return (
    obj &&
    typeof obj.id === 'number' &&
    typeof obj.name === 'string' &&
    typeof obj.ideaPrompt === 'string' &&
    typeof obj.lyrics === 'string' &&
    (typeof obj.audioId === 'string' || obj.audioId === null) &&
    typeof obj.concept === 'string' &&
    typeof obj.narrativeArc === 'string' &&
    typeof obj.characterPrompt === 'string' &&
    typeof obj.selectedStyle === 'string' &&
    typeof obj.customStyle === 'string' &&
    typeof obj.numVariants === 'number' &&
    (typeof obj.forceCharacterInScenes === 'boolean' || typeof obj.forceCharacterInScenes === 'undefined') &&
    (typeof obj.characterReferenceImageId === 'string' || obj.characterReferenceImageId === null) &&
    (typeof obj.styleReferenceImageId === 'string' || obj.styleReferenceImageId === null) &&
    Array.isArray(obj.storyboard) &&
    obj.storyboard.every(isScene)
  );
}

export interface ProjectSnapshot {
    timestamp: number;
    project: Project;
}